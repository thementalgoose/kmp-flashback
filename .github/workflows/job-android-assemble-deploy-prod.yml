name: Job - Android - Assemble Prod AAB + APK

on:
  #  workflow_dispatch:
  #    inputs:
  #      version_name:
  #        type: string
  #        description: "Version name (1.0.0)"
  #        default: "1.0.0"
  #      version_code:
  #        type: string
  #        description: "Version code (1)"
  #        default: "1"
  workflow_call:
    inputs:
      version_name: { required: true, type: string }
      version_code: { required: true, type: string }
    outputs:
      artifact-name:
        value: ${{ jobs.build.outputs.artifact-name }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      # Checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Java 17
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # Caching gradle
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/*.toml*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Environment
      - name: Environment variables
        env:
          GOOGLE_SERVICES_JSON_PRODUCTION: ${{ secrets.GOOGLE_SERVICES_JSON_PRODUCTION }}
          GOOGLE_SERVICES_PLIST_PRODUCTION: ${{ secrets.GOOGLE_SERVICES_PLIST_PRODUCTION }}
        run: |
          mkdir -p composeApp/src/sandbox
          mkdir -p composeApp/src/production
          mkdir -p iosApp/iosApp/Firebase
          echo $GOOGLE_SERVICES_JSON_PRODUCTION | base64 --decode >> composeApp/src/production/google-services.json
          echo $GOOGLE_SERVICES_PLIST_PRODUCTION | base64 --decode >> iosApp/iosApp/Firebase/GoogleService-production.plist

      # Building version
      - name: Building version
        run: |
          echo Version name: ${{ inputs.version_name }}
          echo Version code: ${{ inputs.version_code }}

      # Assemble AAB
      - name: Assemble APK
        env:
          VERSION_NAME: ${{ inputs.version_name }}
          VERSION_CODE: ${{ inputs.version_code }}
        run: |
          ./gradlew :composeApp:assembleProductionRelease

      # Assemble AAB
      - name: Assemble bundle
        env:
          VERSION_NAME: ${{ inputs.version_name }}
          VERSION_CODE: ${{ inputs.version_code }}
        run: |
          ./gradlew :composeApp:bundleProductionRelease

      # Sign AAB
      - name: Sign app
        uses: r0adkll/sign-android-release@v1
        id: sign_aab
        with:
          releaseDirectory: composeApp/build/outputs/bundle/productionRelease
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE }}
          alias: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      # Sign APK
      - name: Sign app
        uses: r0adkll/sign-android-release@v1
        id: sign_apk
        with:
          releaseDirectory: composeApp/build/outputs/apk/production/release
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE }}
          alias: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      # Upload signed artifact info
      - name: Upload artifact info
        uses: actions/upload-artifact@v4
        with:
          name: AAB
          path: |
            composeApp/build/outputs/bundle/**/*.aab
            composeApp/build/outputs/apk/**/*.apk
            composeApp/build/outputs/mapping/**/mapping.txt

      # Deploy
      - name: Deploy Bundle to google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT }}
          packageName: tmg.flashback
          releaseFiles: composeApp/build/outputs/bundle/**/*.aab
          track: internal
          status: "completed"
          mappingFile: composeApp/build/outputs/mapping/productionRelease/mapping.txt

      # Rename signed APK
      - name: Rename signed apk
        run: |
          mv composeApp/build/outputs/apk/production/release/composeApp-production-release-unsigned-signed.apk composeApp/build/outputs/apk/production/release/android-production-signed.apk 

      # Add artifact to tag
      - name: Upload file to github tag
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: composeApp/build/outputs/apk/production/release/android-production-signed.apk