name: Job - iOS - Assemble Prod IPA

on:
  workflow_call:
    inputs:
      version_name: { required: true, type: string }
      version_code: { required: true, type: string }
    outputs:
      artifact-name:
        value: ${{ jobs.build.outputs.artifact-name }}

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Xcode setup
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4'

      - name: Setup Cocoapods
        uses: maxim-lobanov/setup-cocoapods@v1
        with:
          podfile-path: iosApp/Podfile.lock

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/*.toml*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Environment variables
        env:
          GOOGLE_SERVICES_JSON_PRODUCTION: ${{ secrets.GOOGLE_SERVICES_JSON_PRODUCTION }}
          GOOGLE_SERVICES_PLIST_PRODUCTION: ${{ secrets.GOOGLE_SERVICES_PLIST_PRODUCTION }}
        run: |
          mkdir -p composeApp/src/sandbox
          mkdir -p composeApp/src/production
          mkdir -p iosApp/iosApp/Firebase
          echo GOOGLE_SERVICES_JSON_PRODUCTION | base64 --decode >> composeApp/src/production/google-services.json
          echo $GOOGLE_SERVICES_PLIST_PRODUCTION | base64 --decode >> iosApp/iosApp/Firebase/GoogleService-production.plist

      - name: Import certs
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.APPSTORE_CERTIFICATES_FILE_BASE64 }}
          p12-password: ${{ secrets.APPSTORE_CERTIFICATES_PASSWORD }}

      - name: CDing to directory
        run: | 
          cd iosApp

      - name: "Generate ExportOptions.plist"
        run: |
          cat <<EOF > ./exportOptions.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
            <dict>
              <key>destination</key>
              <string>export</string>
              <key>method</key>
              <string>app-store</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>generateAppStoreInformation</key>
              <true/>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>teamID</key>
              <string>${{ secrets.IOS_TEAM_ID }}</string>
              <key>uploadSymbols</key>
              <true/>
            </dict>
          </plist>
          EOF

      - name: XCode build
        run: |
          xcodebuild -workspace ./iosApp.xcworkspace/ -scheme "Production Release" -destination generic/platform=iOS build

      - name: XCode archive
        run: |
          xcodebuild -workspace ./iosApp.xcworkspace/ -scheme "Production Release" -sdk iphoneos -configuration "Production Release" archive -archivePath $PWD/build/iosApp.xcarchive

      - name: XCode IPA
        run: |
          xcodebuild -exportArchive -archivePath $PWD/build/iosApp.xcarchive -exportOptionsPlist exportOptions.plist -exportPath $PWD/build

      - name: XCode finished
        run: | 
          echo "WIP"