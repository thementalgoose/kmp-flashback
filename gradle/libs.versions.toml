[versions]
# Kotlin
kotlin = "2.2.0"
ksp = "2.2.0-2.0.2"
kotlinx-serialization = "1.8.1"
kotlinx-datetime = "0.6.1"
kotlinx-coroutines = "1.10.2"

# Android
agp = "8.10.1"
android-compileSdk = "35"
android-minSdk = "26"
android-targetSdk = "36"
androidx-activityCompose = "1.10.1"
androidx-lifecycle = "2.9.1"
androidx-glance = "1.1.1"

# Firebase
google-services = "4.4.2"
crashlytics = "3.0.4"
firebase-bom = "33.16.0"

# Shared
ktor = "3.2.2"
okHttpLoggingInterceptor = "5.1.0"
compose = "1.8.2"
composeAdaptive = "1.1.2"
composeNavigation = "2.9.0-beta03"
koin = "4.1.0"
room = "2.7.2"
sqlite = "2.5.2"
coil = "3.2.0"
alarmee = "2.0.2"
moko = "0.19.1"
ksoup = "0.6.0"

# Testing
kotest = "5.9.1"
uiTooling = "1.8.3"
mokkery = "2.9.0"
turbine = "1.2.1"

[libraries]
# Kotlin
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }

# Dependency Injection
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-compose-viewmodel-navigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin" }

# Android
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx_glance_core = { module = "androidx.glance:glance", version.ref = "androidx-glance" }
androidx_glance_preview = { module = "androidx.glance:glance-preview", version.ref = "androidx-glance" }
androidx_glance_appwidget = { module = "androidx.glance:glance-appwidget", version.ref = "androidx-glance" }
androidx_glance_appwidgetpreview = { module = "androidx.glance:glance-appwidget-preview", version.ref = "androidx-glance" }
androidx_splashscreen = "androidx.core:core-splashscreen:1.0.1"
android_flagkit = "com.github.murgupluoglu:flagkit-android:1.0.5"
androidx_core = "androidx.core:core-ktx:1.16.0"
androidx_appcompat = "androidx.appcompat:appcompat:1.7.1"
androidx_browser = "androidx.browser:browser:1.8.0"

core_library_desugaring = "com.android.tools:desugar_jdk_libs:2.1.5"

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-remoteconfig = { module = "com.google.firebase:firebase-config" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }
firebase-messagingktx = { module = "com.google.firebase:firebase-messaging-ktx" }

# Compose
compose-adaptive = { module = "org.jetbrains.compose.material3.adaptive:adaptive", version.ref = "composeAdaptive" }
compose-adaptivelayout = { module = "org.jetbrains.compose.material3.adaptive:adaptive-layout", version.ref = "composeAdaptive" }
compose-adaptivenavigation = { module = "org.jetbrains.compose.material3.adaptive:adaptive-navigation", version.ref = "composeAdaptive" }
compose-backhandler = { module = "org.jetbrains.compose.ui:ui-backhandler", version.ref = "compose"}

# Navigation
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "composeNavigation"}

# Database
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }

# Flags
flagkit = "dev.carlsen.flagkit:flagkit:1.1.0"

# HTML
ksoup = { module = "com.mohamedrejeb.ksoup:ksoup-html", version.ref = "ksoup" }

# Coil
coil_compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil_network_ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }

# Networking
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization-kotlinx-xml = { module = "io.ktor:ktor-serialization-kotlinx-xml", version.ref = "ktor" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttpLoggingInterceptor" }

# Test
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# Gradle Plugins
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "uiTooling" }

[bundles]
androidx_glance = [
    "androidx_glance_core",
    "androidx_glance_appwidget",
    "androidx_glance_preview",
    "androidx_glance_appwidgetpreview",
]
kotlin = [
    "kotlinx-dateTime",
    "coroutines-core",
    "kotlinx-serialization"
]
compose = [
    "compose-adaptive",
    "compose-adaptivelayout",
    "compose-adaptivenavigation",
    "compose-backhandler"
]
koin-compose = [
    "koin-compose",
    "koin-compose-viewmodel",
    "koin-compose-viewmodel-navigation"
]
common-ktor = [
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-client-content-negotiation",
]
coil = [
    "coil_compose",
    "coil_network_ktor3"
]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }
googleServices = { id = "com.google.gms.google-services" }
crashlytics = { id = "com.google.firebase.crashlytics" }
mokkery = {id = "dev.mokkery", version.ref = "mokkery"}
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }

# Custom Gradle Plugins
flashback-kotlinMultiplatform = { id = "tmg.flashback.kotlin.multiplatform" }
flashback-androidLibrary = { id = "tmg.flashback.android.library" }
flashback-domainModule = { id = "tmg.flashback.domain.module" }
flashback-dataModule = { id = "tmg.flashback.data.module" }
flashback-featureModule = { id = "tmg.flashback.feature.module" }
