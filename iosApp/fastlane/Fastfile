# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#
# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)
platform :ios do
  desc "Get certificates"
  lane :certificates do
    sync_code_signing(
      type: "appstore",
      app_identifier: ['tmg.flashback'],
      readonly: true
    )
  end

  desc "Load ASC API Key information to use in subsequent lanes"
  lane :load_asc_api_key do
    app_store_connect_api_key(
      key_id: ENV["ASC_KEY_ID"],
      issuer_id: ENV["ASC_ISSUER_ID"],
      key_content: ENV["ASC_KEY_P8"],
      is_key_content_base64: true,
      in_house: false
    )
  end

  desc "Updates the CFBundleShortVersionString in Info.plist"
  lane :update_app_version do |options|
    # Ensure a version number is provided as an option
    unless options[:version_number]
      UI.user_error!("You must provide a version_number, e.g., fastlane update_app_version version_number:\"1.2.3\"")
    end

    # Use the 'set_info_plist_value' action to update the specific key
    set_info_plist_value(
      path: "./iosApp/Info.plist",
      key: "CFBundleShortVersionString",
      value: options[:version_number]
    )
    set_info_plist_value(
      path: "./iosApp/Info.plist",
      key: "CFBundleVersion",
      value: "0"
    )

    UI.success("Successfully updated CFBundleShortVersionString to #{options[:version_number]}")
  end

  desc "Updates the MARKETTING_VERSION in the project.pbxproj file"
  lane :update_marketing_version do |options|
    # Ensure a version number is provided as an option
    unless options[:version_number]
      UI.user_error!("You must provide a version_number, e.g., fastlane update_marketing_version version_number:\"1.2.3\"")
    end

    project_pbxproj_path = "../iosApp.xcodeproj/project.pbxproj"

    file_content = File.read(project_pbxproj_path)
    updated_content = file_content.gsub(/MARKETING_VERSION = \"?[\d\.]+\"?;/, "MARKETING_VERSION = #{options[:version_number]};")

    # Write the updated content back to the file
    File.open(project_pbxproj_path, "w") do |file|
      file.puts updated_content
    end

    UI.success("Successfully updated MARKETTING_VERSION to #{options[:version_number]} in #{project_pbxproj_path}")
  end

  desc "Bump build number based on most recent TestFlight build number"
  lane :fetch_and_increment_build_number do
    #fetch read your app identifier defined in your Appfile
    app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

    current_version = get_version_number()

    latest_build_number = latest_testflight_build_number(
      api_key: api_key,
      version: current_version,
      app_identifier: app_identifier
    )
    increment_build_number(
      build_number: (latest_build_number + 1),
    )
  end

  desc "Build the iOS app for release"
  lane :build_release do |options|
    match(type: "appstore", readonly: true)
    build_app(
      silent: options[:silent],
      workspace: "iosApp.xcworkspace",
      scheme: "Production Release",
      export_options: {
        provisioningProfiles: {
          "tmg.flashback" => "match AppStore tmg.flashback"
        },
        method: "app-store-connect"
      }
    )
  end

  desc "Build and upload to TestFlight"
  lane :build_upload_testflight do |options|
    # Ensure a version number is provided as an option
    unless options[:version_number]
      UI.user_error!("You must provide a version_number, e.g., fastlane build_upload_testflight version_number:\"1.2.3\"")
    end

    # #{options.fetch(:silent, false)

    update_app_version version_number:options[:version_number]
    update_marketing_version version_number:options[:version_number]

    load_asc_api_key
    setup_ci(force: true)
    certificates
    fetch_and_increment_build_number
    build_release silent:options.fetch(:silent, false)

    upload_to_testflight(skip_submission: true)
  end
end